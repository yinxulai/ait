name: 发布

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  # 构建多平台二进制文件
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux 平台
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: linux
            goarch: arm
            suffix: linux-arm
          - goos: linux
            goarch: 386
            suffix: linux-386
          
          # macOS/Darwin 平台
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          
          # Windows 平台
          - goos: windows
            goarch: amd64
            suffix: windows-amd64
            extension: .exe
          - goos: windows
            goarch: arm64
            suffix: windows-arm64
            extension: .exe
          - goos: windows
            goarch: 386
            suffix: windows-386
            extension: .exe

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Go 环境
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: 构建二进制文件
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          go build \
            -ldflags "-w -s \
              -X main.version=${{ github.ref_name }} \
              -X 'github.com/yinxulai/ait/internal/upload.UploadBaseURL=${{ secrets.UPLOAD_BASE_URL }}' \
              -X 'github.com/yinxulai/ait/internal/upload.UploadAuthToken=${{ secrets.UPLOAD_AUTH_TOKEN }}' \
              -X 'github.com/yinxulai/ait/internal/upload.UploadUserAgent=${{ github.repository }}(${{ github.ref_name }})' \
            " \
            -o dist/ait-${{ matrix.suffix }}${{ matrix.extension }} \
            ./cmd/

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ait-${{ matrix.suffix }}
          path: dist/ait-${{ matrix.suffix }}${{ matrix.extension }}

  # 上传二进制文件到 Release
  upload-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: 准备发布文件
        run: |
          mkdir -p release-files
          find dist -type f -name "ait-*" | xargs -I {} cp {} release-files/
          ls -la release-files/

      - name: 上传到发布页面
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/*
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
